{"ast":null,"code":"import _slicedToArray from\"/Users/jawright/MIT/bank/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import Card from\"./card\";import{UserContext}from\"../App\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Deposit(){var ctx=React.useContext(UserContext);var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),deposit=_React$useState2[0],setDeposit=_React$useState2[1];var _React$useState3=React.useState(''),_React$useState4=_slicedToArray(_React$useState3,2),status=_React$useState4[0],setStatus=_React$useState4[1];var user=ctx.users[0];function handleDeposit(){//console.log(deposit);\n//check that the deposit value is a number!\nif(isNaN(parseInt(deposit))){setStatus('Error: deposit must be a number');setTimeout(function(){return setStatus('');},4000);return;}//check that the deposit value is a positive number!\nif(parseInt(deposit)<=0){setStatus('Error: deposit must be a positive number');setTimeout(function(){return setStatus('');},4000);return;}var total=parseInt(user.balance)+parseInt(deposit);//console.log(total);\nctx.users[0].balance=total;alert('Successfull Deposit');setDeposit('');}function handleBlur(event){//console.log('hi');\nvar submitElement=document.getElementById(\"deposit-button\");if(submitElement!=null&&!deposit){submitElement.disabled=true;}else if(submitElement!=null){submitElement.removeAttribute(\"disabled\");}}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\" Deposit\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Card,{bgcolor:\"success\",status:status,body:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:\"Balance\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"col\",children:[\"$\",user.balance]})]}),/*#__PURE__*/_jsx(\"br\",{}),\"Deposit Amount\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"input\",className:\"form-control\",id:\"deposit\",placeholder:\"Deposit Amount\",value:deposit,onChange:function onChange(e){return setDeposit(e.currentTarget.value);},onBlur:function onBlur(e){return handleBlur(e);}}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{onClick:handleDeposit,children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",id:\"deposit-button\",className:\"btn btn-light\",disabled:true,children:\"Deposit\"})}),/*#__PURE__*/_jsx(\"br\",{})]})})]});}export default Deposit;","map":{"version":3,"sources":["/Users/jawright/MIT/bank/src/Components/deposit.jsx"],"names":["React","Card","UserContext","Deposit","ctx","useContext","useState","deposit","setDeposit","status","setStatus","user","users","handleDeposit","isNaN","parseInt","setTimeout","total","balance","alert","handleBlur","event","submitElement","document","getElementById","disabled","removeAttribute","e","currentTarget","value"],"mappings":"8GAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,OAAQC,WAAR,KAA0B,QAA1B,C,6IAEA,QAASC,CAAAA,OAAT,EAAkB,CACd,GAAMC,CAAAA,GAAG,CAAGJ,KAAK,CAACK,UAAN,CAAiBH,WAAjB,CAAZ,CACA,oBAA8BF,KAAK,CAACM,QAAN,CAAe,EAAf,CAA9B,oDAAOC,OAAP,qBAAgBC,UAAhB,qBACA,qBAAgCR,KAAK,CAACM,QAAN,CAAe,EAAf,CAAhC,qDAAOG,MAAP,qBAAeC,SAAf,qBACA,GAAMC,CAAAA,IAAI,CAAGP,GAAG,CAACQ,KAAJ,CAAU,CAAV,CAAb,CAEA,QAASC,CAAAA,aAAT,EAAwB,CACtB;AACA;AACA,GAAIC,KAAK,CAACC,QAAQ,CAACR,OAAD,CAAT,CAAT,CAA6B,CAC3BG,SAAS,CAAC,iCAAD,CAAT,CACAM,UAAU,CAAC,iBAAMN,CAAAA,SAAS,CAAC,EAAD,CAAf,EAAD,CAAqB,IAArB,CAAV,CACA,OACD,CAED;AACA,GAAIK,QAAQ,CAACR,OAAD,CAAR,EAAqB,CAAzB,CAA2B,CACzBG,SAAS,CAAC,0CAAD,CAAT,CACAM,UAAU,CAAC,iBAAMN,CAAAA,SAAS,CAAC,EAAD,CAAf,EAAD,CAAqB,IAArB,CAAV,CACA,OACD,CAED,GAAIO,CAAAA,KAAK,CAAGF,QAAQ,CAACJ,IAAI,CAACO,OAAN,CAAR,CAAyBH,QAAQ,CAACR,OAAD,CAA7C,CACA;AACAH,GAAG,CAACQ,KAAJ,CAAU,CAAV,EAAaM,OAAb,CAAuBD,KAAvB,CACAE,KAAK,CAAC,qBAAD,CAAL,CACAX,UAAU,CAAC,EAAD,CAAV,CACD,CAED,QAASY,CAAAA,UAAT,CAAoBC,KAApB,CAA0B,CACxB;AACA,GAAMC,CAAAA,aAAa,CAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAtB,CAEA,GAAIF,aAAa,EAAI,IAAlB,EAA4B,CAACf,OAAhC,CAA0C,CACxCe,aAAa,CAACG,QAAd,CAAyB,IAAzB,CACD,CAFD,IAGK,IAAIH,aAAa,EAAI,IAArB,CAA0B,CAC7BA,aAAa,CAACI,eAAd,CAA8B,UAA9B,EACD,CAEF,CAED,mBACE,wCACA,gCADA,cAEA,aAFA,cAGA,KAAC,IAAD,EACI,OAAO,CAAC,SADZ,CAEI,MAAM,CAAEjB,MAFZ,CAGI,IAAI,cACI,wCACA,aAAK,SAAS,CAAC,KAAf,wBACE,YAAK,SAAS,CAAC,KAAf,qBADF,cAIE,aAAK,SAAS,CAAC,KAAf,eACEE,IAAI,CAACO,OADP,GAJF,GADA,cASD,aATC,+BAUc,aAVd,cAWA,cAAO,IAAI,CAAC,OAAZ,CAAoB,SAAS,CAAC,cAA9B,CAA6C,EAAE,CAAC,SAAhD,CAA0D,WAAW,CAAC,gBAAtE,CAAuF,KAAK,CAAEX,OAA9F,CAAuG,QAAQ,CAAE,kBAAAoB,CAAC,QAAInB,CAAAA,UAAU,CAACmB,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAd,EAAlH,CAAyJ,MAAM,CAAE,gBAAAF,CAAC,QAAIP,CAAAA,UAAU,CAACO,CAAD,CAAd,EAAlK,EAXA,cAWsL,aAXtL,cAYA,YAAK,OAAO,CAAEd,aAAd,uBAA6B,eAAQ,IAAI,CAAC,QAAb,CAAsB,EAAE,CAAC,gBAAzB,CAA0C,SAAS,CAAC,eAApD,CAAoE,QAAQ,KAA5E,qBAA7B,EAZA,cAaA,aAbA,GAJZ,EAHA,GADF,CA6BD,CAED,cAAeV,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport Card from \"./card\";\nimport {UserContext} from \"../App\";\n\nfunction Deposit(){\n    const ctx = React.useContext(UserContext);\n    const [deposit, setDeposit] = React.useState(''); \n    const [status, setStatus]     = React.useState('');\n    const user = ctx.users[0];\n  \n    function handleDeposit(){\n      //console.log(deposit);\n      //check that the deposit value is a number!\n      if (isNaN(parseInt(deposit))){\n        setStatus('Error: deposit must be a number');\n        setTimeout(() => setStatus(''),4000);\n        return;\n      }\n  \n      //check that the deposit value is a positive number!\n      if (parseInt(deposit) <= 0){\n        setStatus('Error: deposit must be a positive number');\n        setTimeout(() => setStatus(''),4000);\n        return;\n      }\n  \n      var total = parseInt(user.balance) + parseInt(deposit);\n      //console.log(total);\n      ctx.users[0].balance = total;\n      alert('Successfull Deposit');\n      setDeposit('');\n    }  \n  \n    function handleBlur(event){\n      //console.log('hi');\n      const submitElement = document.getElementById(\"deposit-button\");\n   \n      if((submitElement != null) && (!deposit) ){\n        submitElement.disabled = true;\n      }\n      else if (submitElement != null){\n        submitElement.removeAttribute(\"disabled\");\n      }\n      \n    }\n  \n    return (\n      <>\n      <h1> Deposit</h1>\n      <br/>\n      <Card\n          bgcolor=\"success\"\n          status={status}\n          body={  \n                  <>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                    Balance\n                    </div>\n                    <div className=\"col\">\n                    ${user.balance}\n                    </div>\n                  </div>\n                 <br/>\n                  Deposit Amount<br/>\n                  <input type=\"input\" className=\"form-control\" id=\"deposit\" placeholder=\"Deposit Amount\" value={deposit} onChange={e => setDeposit(e.currentTarget.value)} onBlur={e => handleBlur(e)}/><br/>\n                  <div onClick={handleDeposit}><button type=\"submit\" id=\"deposit-button\" className=\"btn btn-light\" disabled>Deposit</button></div>\n                  <br/>\n  \n  \n                  </>\n               }\n        />\n        </>\n    )\n  }\n  \n  export default Deposit;"]},"metadata":{},"sourceType":"module"}